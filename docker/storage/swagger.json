{
    "openapi": "3.0.3",
    "info": {
      "title": "Report Storage API - OpenAPI 3.0",
      "description": "REST API для взаимодействия с хранилищем заявок в проекте \"Осторожно, люк!\"\n\nВ итоговом варианте будет доступно 12 методов. На данный момент реализовано 6.",
      "version": "1.0.11"
    },
    "servers": [
      {
        "url": "https://sf-hackathon.xyz",
        "description": "nginx server"
      },
      {
        "url": "http://sf-hackathon.xyz:10502",
        "description": "container directly"
      }
    ],
    "tags": [
      {
        "name": "Safety",
        "description": "Безопасные эндпоинты"
      }
    ],
    "paths": {
      "/api/reports/{num}": {
        "get": {
          "tags": [
            "Safety"
          ],
          "summary": "Получение заявки по номеру",
          "description": "Получение заявки по ее уникальному номеру.",
          "parameters": [
            {
              "name": "num",
              "in": "path",
              "description": "Уникальный номер заявки",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64",
                "example": 1
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Заявка по указанному номеру",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Report"
                  }
                }
              }
            },
            "400": {
              "description": "invalid report number"
            },
            "404": {
              "description": "report not found"
            },
            "500": {
              "description": "internal error"
            }
          }
        }
      },
      "/api/reports/all": {
        "get": {
          "tags": [
            "Safety"
          ],
          "summary": "Получение все заявок с фильтрацией по статусам",
          "description": "Получение массива всех заявок, имеющих переданные статусы. Если параметр \"status\" не передан или имеет некорректное значение, то вернет все заявки.",
          "parameters": [
            {
              "name": "status",
              "in": "query",
              "description": "Числовые значения статусов заявок через запятую",
              "schema": {
                "type": "string",
                "example": "1,2"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Массив заявок с указанными статусами",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "$ref": "#/components/schemas/Report"
                    }
                  }
                }
              }
            },
            "404": {
              "description": "no reports found"
            },
            "500": {
              "description": "internal error"
            }
          }
        }
      },
      "/api/reports/filter": {
        "get": {
          "tags": [
            "Safety"
          ],
          "summary": "Получение N числа последних заявок с фильтрами",
          "description": "Получение N числа последних заявок, попадающих под параметры фильтрации. Если параметры не переданы или имеют некорректные значения, то используются значения по умолчанию.",
          "parameters": [
            {
              "name": "n",
              "in": "query",
              "description": "Необходимое количество заявок. Значение по умолчанию равно 20",
              "schema": {
                "type": "integer",
                "example": 10
              }
            },
            {
              "name": "status",
              "in": "query",
              "description": "Числовые значения статусов заявок через запятую. По умолчанию вернет все статусы",
              "schema": {
                "type": "string",
                "example": "1,2"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Сортировка по номеру заявки. Корректные значения 1 - восходящая, -1 - нисходящая. По умолчанию нисходящая сортировка",
              "schema": {
                "type": "integer",
                "example": 1
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Массив заявок, попадающих под фильтры",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "$ref": "#/components/schemas/Report"
                    }
                  }
                }
              }
            },
            "404": {
              "description": "no reports found"
            },
            "500": {
              "description": "internal error"
            }
          }
        }
      },
      "/api/reports/id/{id}": {
        "get": {
          "tags": [
            "Safety"
          ],
          "summary": "Получение заявки по ObjectID",
          "description": "Получение заявки по ее ObjectID. ObjectID - уникальный идентификатор, используемый в базе данных MongoDB.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ObjectID заявки",
              "required": true,
              "schema": {
                "type": "string",
                "format": "ObjectID",
                "example": "66f90ce180f2bec8de73a174"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Заявка по указанному ObjectID",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Report"
                  }
                }
              }
            },
            "400": {
              "description": "invalid report objectid"
            },
            "404": {
              "description": "report not found"
            },
            "500": {
              "description": "internal error"
            }
          }
        }
      },
      "/api/reports/radius": {
        "get": {
          "tags": [
            "Safety"
          ],
          "summary": "Получение всех заявок в радиусе от точки",
          "description": "Получение массива заявок, имеющих переданные статусы, в указанном радиусе от точки координат.",
          "parameters": [
            {
              "name": "x",
              "in": "query",
              "description": "Широта точки координат",
              "required": true,
              "schema": {
                "type": "number",
                "format": "double",
                "example": 55.75388130172051
              }
            },
            {
              "name": "y",
              "in": "query",
              "description": "Долгота точки координат",
              "required": true,
              "schema": {
                "type": "number",
                "format": "double",
                "example": 37.62026781374883
              }
            },
            {
              "name": "r",
              "in": "query",
              "description": "Радиус с метрах",
              "required": true,
              "schema": {
                "type": "integer",
                "example": 2000
              }
            },
            {
              "name": "status",
              "in": "query",
              "description": "Числовые значения статусов заявок через запятую. По умолчанию вернет все статусы",
              "schema": {
                "type": "string",
                "example": "1,2"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Массив заявок в указанном радиусе от точки координат",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "$ref": "#/components/schemas/Report"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "insufficient parameters || invalid parameter x format || invalid parameter y format || Invalid parameter radius format"
            },
            "404": {
              "description": "no reports found"
            },
            "500": {
              "description": "internal error"
            }
          }
        }
      },
      "/api/reports/quad": {
        "post": {
          "tags": [
            "Safety"
          ],
          "summary": "Получение всех заявок в указанном многоугольнике",
          "description": "Получение массива заявок, имеющих переданные статусы, в указанном многоугольнике. Количество вершин многоугольника должно быть равно 3 или более. Обычно 4 вершины как квадрат экрана. В теле запроса должен быть JSON с координатами вершин.",
          "requestBody": {
            "description": "JSON с координатами вершин многоугольника.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quad"
                }
              }
            }
          },
          "parameters": [
            {
              "name": "status",
              "in": "query",
              "description": "Числовые значения статусов заявок через запятую",
              "schema": {
                "type": "string",
                "example": "1,2"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Массив заявок в границах многоугольника",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "$ref": "#/components/schemas/Report"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "invalid JSON"
            },
            "404": {
              "description": "no reports found"
            },
            "500": {
              "description": "internal error"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "Report": {
          "required": [
            "id",
            "number",
            "created",
            "city",
            "address",
            "description",
            "contacts",
            "media",
            "geo",
            "status"
          ],
          "type": "object",
          "description": "Объект заявки.",
          "properties": {
            "id": {
              "type": "string",
              "description": "Уникальный ObjectID заявки. Генерируется базой данных.",
              "format": "ObjectId",
              "example": "66f6e77f4761cbdbe89ae49b"
            },
            "number": {
              "type": "integer",
              "description": "Уникальный порядковый номер заявки.",
              "format": "int64",
              "example": 1
            },
            "created": {
              "type": "string",
              "description": "Дата и время создания заявки.",
              "format": "date-time",
              "example": "2024-09-27T17:12:30.234Z"
            },
            "updated": {
              "type": "string",
              "description": "Дата и время последнего изменения заявки.",
              "format": "date-time",
              "example": "2024-09-27T17:12:30.234Z"
            },
            "city": {
              "type": "string",
              "description": "Город или местность заявки.",
              "maxLength": 100,
              "example": "Москва"
            },
            "address": {
              "type": "string",
              "description": "Ближайший адрес места заявки.",
              "maxLength": 100,
              "example": "ул.Ленина, д. 1"
            },
            "description": {
              "type": "string",
              "description": "Описание заявки в свободной форме.",
              "maxLength": 500,
              "example": "Открытый канализационный люк на тротуаре."
            },
            "contacts": {
              "$ref": "#/components/schemas/Contacts"
            },
            "media": {
              "type": "array",
              "description": "Массив ссылок на медиа файлы.",
              "items": {
                "type": "string",
                "format": "email"
              }
            },
            "geo": {
              "$ref": "#/components/schemas/Geo"
            },
            "status": {
              "type": "integer",
              "description": "Числовая форма статуса заявки.",
              "enum": [
                1,
                2,
                3,
                4,
                5
              ],
              "example": 1
            }
          }
        },
        "Contacts": {
          "type": "object",
          "description": "Контакты автора заявки. Все опциональны.",
          "properties": {
            "email": {
              "type": "string",
              "description": "Адрес электронной почты автора заявки.",
              "example": "bob@gmail.com"
            },
            "whatsapp": {
              "type": "string",
              "description": "Номер телефона Whatsapp автора заявки.",
              "example": 71234567890
            },
            "telegram": {
              "type": "string",
              "description": "Ник telegram автора заявки.",
              "example": "@bob"
            },
            "phone": {
              "type": "string",
              "description": "Номер телефона автора заявки.",
              "example": 71234567890
            }
          }
        },
        "Geo": {
          "type": "object",
          "required": [
            "type",
            "coordinates"
          ],
          "description": "Географические координаты точки заявки в виде GeoJSON.",
          "properties": {
            "type": {
              "type": "string",
              "description": "тип объекта GeoJSON, в нашем случае всегда значение Point.",
              "example": "Point"
            },
            "coordinates": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double",
                "example": "55.75388130172051, 37.62026781374883"
              }
            }
          }
        },
        "Quad": {
          "type": "object",
          "required": [
            "quad"
          ],
          "description": "Географические координаты вершин многоугольника.",
          "properties": {
            "quad": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "number",
                  "format": "double",
                  "example": "55.75388130172051, 37.62026781374883"
                }
              }
            }
          }
        },
        "NewReport": {
          "type": "object",
          "required": [
            "address",
            "geo"
          ],
          "description": "JSON из формы новой заявки. Адрес и координаты обязательны.",
          "properties": {
            "address": {
              "type": "string",
              "description": "Ближайший адрес места заявки.",
              "maxLength": 100,
              "example": "ул.Ленина, д. 1"
            },
            "description": {
              "type": "string",
              "description": "Описание заявки в свободной форме.",
              "maxLength": 500,
              "example": "Открытый канализационный люк на тротуаре."
            },
            "contacts": {
              "$ref": "#/components/schemas/Contacts"
            },
            "geo": {
              "$ref": "#/components/schemas/Geo"
            }
          }
        }
      },
      "requestBodies": {
        "NewReport": {
          "description": "JSON из формы новой заявки. Адрес и координаты обязательны.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewReport"
              }
            }
          }
        },
        "Quad": {
          "description": "JSON с координатами вершин многоугольника.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Quad"
              }
            }
          }
        }
      }
    }
  }