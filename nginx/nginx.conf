
user nginx;
worker_processes 2;
worker_rlimit_nofile 4096;

pid        /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #log_format json_combined escape=json
    #    '{'
    #     '"time_local":"$time_local",'
    #     '"remote_addr":"$remote_addr",'
    #     '"remote_user":"$remote_user",'
    #     '"request":"$request",'
    #     '"status": "$status",'
    #     '"body_bytes_sent":"$body_bytes_sent",'
    #     '"http_referrer":"$http_referer",'
    #     '"http_user_agent":"$http_user_agent",'
    #     '"request_time":"$request_time"'
    #    '}';

    error_log   /var/log/nginx/error.log notice;
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;
    keepalive_timeout  65;
    #gzip           on;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;

    include /etc/nginx/conf.d/*.conf;

    client_max_body_size 32M;

    server {
        listen 80;
        server_name sf-hackathon.xyz www.sf-hackathon.xyz;
        charset utf-8;
        return 301 https://$host$request_uri;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        # error_page   500 502 503 504  /50x.html;
        # location = /50x.html {
        #    root   html;
        #}
    }

    server {
        listen 443 ssl;
        server_name sf-hackathon.xyz www.sf-hackathon.xyz;
        charset utf-8;
        http2 on;

        ssl_certificate      /etc/letsencrypt/live/sf-hackathon.xyz/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/sf-hackathon.xyz/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/sf-hackathon.xyz/chain.pem;

        ssl_protocols        TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        set  $trace_id  $connection-$connection_requests-$msec;

        proxy_set_header Host $host;
        proxy_set_header X-Request-Id $trace_id;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Static

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        # Debug

        location /debug/dozzle {
            proxy_pass http://sf-hackathon.xyz:10521;
            chunked_transfer_encoding off;
            proxy_buffering off;
            proxy_cache off;
        }

        location /debug/nginx {
            stub_status;
        }

        # Debug Storage

        # Swagger

        location /debug/storage/swagger/ {
            proxy_pass http://sf-hackathon.xyz:10522/;
        }

        # Debug Account

        # Swagger

        location /debug/account/swagger/ {
            proxy_pass http://sf-hackathon.xyz:10504/account/swagger/;
        }

        #location /static/ {
        #    proxy_pass http://sf-hackathon.xyz:10504/;
        #}

        # Redoc

        location /debug/account/redoc/ {
            proxy_pass http://sf-hackathon.xyz:10504/redoc/;
        }

        location /drf-yasg/ {
            proxy_pass http://sf-hackathon.xyz:10504/drf-yasg/;
        }

        location /static/drf-yasg/ {
            proxy_pass http://sf-hackathon.xyz:10504/static/drf-yasg/;
        }

        # Endpoints

        # Report-Storage endpoints

        location /api/reports {
            proxy_pass http://sf-hackathon.xyz:10502/api/reports;
        }

        # Account endpoints

        location /account {
            proxy_pass http://sf-hackathon.xyz:10504/account;
        }
    }
}